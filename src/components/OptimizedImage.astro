---
export interface Props {
  src: string;
  alt?: string;
  class?: string;
  loading?: 'lazy' | 'eager';
  useSquareThumbnail?: boolean;
}

const { 
  src, 
  alt = '', 
  class: className = '', 
  loading = 'lazy',
  useSquareThumbnail = false
} = Astro.props;

// Автоматически извлекаем albumName и imageName из src
// Пример: '/images/albums/nature/photo1.jpg' -> albumName='nature', imageName='photo1.jpg'
const pathParts = src.split('/');
const albumName = pathParts[pathParts.length - 2]; // предпоследняя часть пути
const imageName = pathParts[pathParts.length - 1]; // последняя часть пути

// Убираем расширение из имени файла
const baseName = imageName.replace(/\.[^/.]+$/, '');

// Пути к оптимизированным изображениям
const placeholderSrc = `/images/optimized/placeholders/${albumName}/${baseName}.jpg`;
const thumbnailSrc = useSquareThumbnail 
  ? `/images/optimized/thumbnails/${albumName}/${baseName}.webp`
  : `/images/optimized/${albumName}/${baseName}_thumbnail.webp`;

// Responsive srcset
const srcset = `
  /images/optimized/${albumName}/${baseName}_thumbnail.webp 400w,
  /images/optimized/${albumName}/${baseName}_medium.webp 800w,
  /images/optimized/${albumName}/${baseName}_large.webp 1200w
`;
---

<div class={`optimized-image ${className}`}>
  <img 
    class="placeholder" 
    src={placeholderSrc} 
    alt={alt}
    loading="eager"
  />
  <img 
    class="main-image" 
    src={thumbnailSrc}
    srcset={srcset}
    sizes="(max-width: 480px) 100vw, (max-width: 768px) 50vw, (max-width: 1200px) 33vw, 25vw"
    alt={alt}
    loading={loading}
    onload="this.parentElement.classList.add('loaded')"
  />
</div>

<style>
  .optimized-image {
    position: relative;
    overflow: hidden;
    background-color: #f5f5f5;
  }

  .optimized-image img {
    width: 100%;
    height: auto;
    display: block;
  }

  .placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: blur(8px);
    transform: scale(1.1);
    transition: opacity 0.3s ease;
  }

  .main-image {
    position: relative;
    z-index: 1;
    opacity: 0;
    transition: opacity 0.6s ease;
  }

  .optimized-image.loaded .main-image {
    opacity: 1;
  }

  .optimized-image.loaded .placeholder {
    opacity: 0;
  }

  /* Квадратные thumbnail'ы для сетки */
  .optimized-image.square {
    aspect-ratio: 1;
  }

  .optimized-image.square img {
    height: 100%;
    object-fit: cover;
  }
</style> 