---
const albums = [
  {
    id: 'nature',
    title: 'Природа',
    description: 'Пейзажи и дикая природа',
    cover: '/images/albums/nature/cover.jpg',
    count: 6,
    size: 'large'
  },
  {
    id: 'street',
    title: 'Уличная фотография',
    description: 'Городские моменты',
    cover: '/images/albums/street/cover.jpg',
    count: 6,
    size: 'medium'
  },
  {
    id: 'portraits',
    title: 'Портреты',
    description: 'Люди и эмоции',
    cover: '/images/albums/portraits/cover.jpg',
    count: 6,
    size: 'small'
  },
  {
    id: 'landscapes',
    title: 'Пейзажи',
    description: 'Красота природных ландшафтов',
    cover: '/images/albums/nature/photo1.jpg',
    count: 8,
    size: 'wide'
  },
  {
    id: 'architecture',
    title: 'Архитектура',
    description: 'Геометрия городских строений',
    cover: '/images/albums/street/photo2.jpg',
    count: 12,
    size: 'tall'
  },
  {
    id: 'people',
    title: 'Люди',
    description: 'Характеры и эмоции',
    cover: '/images/albums/portraits/photo2.jpg',
    count: 15,
    size: 'medium'
  },
  {
    id: 'sunset',
    title: 'Закаты',
    description: 'Магия золотого часа',
    cover: '/images/albums/nature/photo3.jpg',
    count: 9,
    size: 'large'
  },
  {
    id: 'urban',
    title: 'Урбан',
    description: 'Ритм мегаполиса',
    cover: '/images/albums/street/photo4.jpg',
    count: 7,
    size: 'small'
  },
  {
    id: 'studio',
    title: 'Студийные',
    description: 'Контролируемый свет',
    cover: '/images/albums/portraits/photo4.jpg',
    count: 11,
    size: 'wide'
  },
  {
    id: 'seasons',
    title: 'Времена года',
    description: 'Природа в движении',
    cover: '/images/albums/nature/photo5.jpg',
    count: 20,
    size: 'tall'
  },
  {
    id: 'street-life',
    title: 'Жизнь улиц',
    description: 'Случайные моменты',
    cover: '/images/albums/street/photo5.jpg',
    count: 14,
    size: 'medium'
  },
  {
    id: 'black-white',
    title: 'Ч/Б портреты',
    description: 'Классика без цвета',
    cover: '/images/albums/portraits/photo5.jpg',
    count: 6,
    size: 'small'
  }
];

// Лучшие фотографии для слайдера
const heroSlides = [
  '/images/albums/nature/photo1.jpg',
  '/images/albums/street/photo1.jpg',
  '/images/albums/portraits/photo1.jpg',
  '/images/albums/nature/photo2.jpg',
  '/images/albums/street/photo3.jpg'
];

const photographer = {
  email: "your.email@example.com",
  social: {
    instagram: "@your_instagram",
    telegram: "@your_telegram"
  }
};
---

<html lang="ru">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Vyukov Oleg | Мои работы</title>
	</head>
	  <body>
    <div class="layout">
      <aside class="sidebar">
        <div class="sidebar-content">
          <div class="about-info">
            <div class="avatar">
              <img src="/images/author.jpg" alt="Vyukov Oleg" />
            </div>
            <h1>Vyukov Oleg</h1>
            <h2>Фотограф-любитель</h2>
            <p>Бэкенд разработчик по профессии, фотография - мое увлечение. Больше всего привлекают пейзажи и уличная фотография.</p>
          </div>
          
          <div class="sidebar-contacts">
            <a href={`mailto:${photographer.email}`} title="Email">
              <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor">
                <path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"/>
              </svg>
            </a>
            <a href={`https://instagram.com/${photographer.social.instagram.replace('@', '')}`} target="_blank" title="Instagram">
              <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
              </svg>
            </a>
            <a href={`https://t.me/${photographer.social.telegram.replace('@', '')}`} target="_blank" title="Telegram">
              <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor">
                <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"/>
              </svg>
            </a>
          </div>
        </div>
      </aside>

      <main class="content">
			<!-- Hero Slider -->
			<section class="hero-slider">
				<div class="slider-container">
					{heroSlides.map((slide, index) => (
						<div class={`slide ${index === 0 ? 'active' : ''}`}>
							<img src={slide} alt="Фотография" />
						</div>
					))}
				</div>
				
				<!-- Navigation -->
				<div class="slider-nav">
					<button class="nav-btn prev" onclick="changeSlide(-1)">‹</button>
					<button class="nav-btn next" onclick="changeSlide(1)">›</button>
				</div>
				
				<!-- Dots -->
				<div class="slider-dots">
					{heroSlides.map((_, index) => (
						<button class={`dot ${index === 0 ? 'active' : ''}`} onclick={`currentSlide(${index + 1})`}></button>
					))}
				</div>
				
				<!-- Scroll Down Indicator -->
				<div class="scroll-indicator" onclick="scrollToAlbums()">
					<div class="scroll-icon">
						<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
							<path d="M7 13l3 3 3-3"></path>
							<path d="M7 6l3 3 3-3"></path>
						</svg>
					</div>
					<span>Альбомы</span>
				</div>
			</section>

			<!-- Albums Section -->
			<section class="albums" id="albums">
				<div class="albums-grid">
					{albums.map((album) => (
						<div class="album-card">
							<a href={`/albums/${album.id}`}>
								<img src={album.cover} alt={album.title} loading="lazy" />
								<div class="album-overlay">
									<div class="album-title">{album.title}</div>
									<div class="album-count">{album.count} фото</div>
								</div>
							</a>
						</div>
					))}
				</div>
			</section>
		</main>
    </div>

		<script>
			let currentSlideIndex = 0;
			const slides = document.querySelectorAll('.slide');
			const dots = document.querySelectorAll('.dot');
			const totalSlides = slides.length;

			function showSlide(index: number) {
				slides.forEach(slide => slide.classList.remove('active'));
				dots.forEach(dot => dot.classList.remove('active'));
				
				slides[index].classList.add('active');
				dots[index].classList.add('active');
			}

			function changeSlide(direction: number) {
				currentSlideIndex += direction;
				
				if (currentSlideIndex >= totalSlides) {
					currentSlideIndex = 0;
				} else if (currentSlideIndex < 0) {
					currentSlideIndex = totalSlides - 1;
				}
				
				showSlide(currentSlideIndex);
			}

			function currentSlide(index: number) {
				currentSlideIndex = index - 1;
				showSlide(currentSlideIndex);
			}

			// Автопрокрутка
			setInterval(() => {
				changeSlide(1);
			}, 5000);

			// Функция скролла к альбомам
			function scrollToAlbums() {
				const albumsSection = document.querySelector('.albums');
				if (albumsSection) {
					albumsSection.scrollIntoView({ 
						behavior: 'smooth',
						block: 'start'
					});
				}
			}

			// Функция masonry layout
			function layoutMasonry() {
				const grid = document.querySelector('.albums-grid') as HTMLElement;
				if (!grid) return;

				const cards = Array.from(grid.children) as HTMLElement[];
				if (cards.length === 0) return;

				// Определяем количество колонок в зависимости от ширины
				const containerWidth = grid.offsetWidth;
				let columnCount = 4;
				
				if (containerWidth >= 1200) columnCount = 5;
				else if (containerWidth >= 900) columnCount = 4;
				else if (containerWidth >= 600) columnCount = 3;
				else if (containerWidth >= 480) columnCount = 2;
				else columnCount = 1;

				// Вычисляем ширину колонки
				const gap = 16;
				const columnWidth = (containerWidth - (gap * (columnCount - 1))) / columnCount;
				
				// Инициализируем массив высот колонок
				const columnHeights = new Array(columnCount).fill(0);

				// Размещаем каждую карточку
				cards.forEach((card, index) => {
					// Находим самую короткую колонку
					const shortestColumnIndex = columnHeights.indexOf(Math.min(...columnHeights));
					
					// Вычисляем позицию
					const x = shortestColumnIndex * (columnWidth + gap);
					const y = columnHeights[shortestColumnIndex];
					
					// Устанавливаем размер и позицию
					card.style.position = 'absolute';
					card.style.left = x + 'px';
					card.style.top = y + 'px';
					card.style.width = columnWidth + 'px';
					
					// Обновляем высоту колонки
					columnHeights[shortestColumnIndex] += card.offsetHeight + gap;
				});

				// Устанавливаем высоту контейнера
				const maxHeight = Math.max(...columnHeights);
				grid.style.height = (maxHeight - gap) + 'px';
			}

			// Инициализация masonry
			function initMasonry() {
				const images = document.querySelectorAll('.album-card img') as NodeListOf<HTMLImageElement>;
				let loadedImages = 0;

				const checkAllLoaded = () => {
					loadedImages++;
					if (loadedImages === images.length) {
						setTimeout(layoutMasonry, 100);
					}
				};

				if (images.length === 0) {
					layoutMasonry();
					return;
				}

				images.forEach(img => {
					if (img.complete) {
						checkAllLoaded();
					} else {
						img.addEventListener('load', checkAllLoaded);
						img.addEventListener('error', checkAllLoaded);
					}
				});

				// Перестраиваем при изменении размера окна
				let resizeTimeout: any;
				window.addEventListener('resize', () => {
					clearTimeout(resizeTimeout);
					resizeTimeout = setTimeout(layoutMasonry, 250);
				});
			}

			// Инициализация после загрузки DOM
			document.addEventListener('DOMContentLoaded', initMasonry);

			// Глобальные функции для inline onclick
			(window as any).changeSlide = changeSlide;
			(window as any).currentSlide = currentSlide;
			(window as any).scrollToAlbums = scrollToAlbums;
		</script>
	</body>
</html>

<style>
	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	body {
		font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
		line-height: 1.4;
		color: #262626;
		background: #ffffff;
		margin: 0;
		height: 100vh;
		overflow: hidden;
	}

	.layout {
		display: flex;
		height: 100vh;
	}

	/* Sidebar */
	.sidebar {
		width: 280px;
		background: #ffffff;
		border-right: 1px solid #dbdbdb;
		position: fixed;
		left: 0;
		top: 0;
		height: 100vh;
		z-index: 100;
	}

	.sidebar-content {
		display: flex;
		flex-direction: column;
		height: 100%;
		padding: 40px 24px 24px;
	}

	.about-info {
		flex-grow: 1;
	}

	.avatar {
		width: 80px;
		height: 80px;
		margin: 0 auto 20px;
	}

	.avatar img {
		width: 100%;
		height: 100%;
		border-radius: 50%;
		object-fit: cover;
		border: 2px solid #dbdbdb;
	}

	.about-info h1 {
		font-size: 20px;
		font-weight: 400;
		color: #262626;
		margin-bottom: 8px;
		text-align: center;
		font-family: 'Instagram Sans', -apple-system, BlinkMacSystemFont, sans-serif;
	}

	.about-info h2 {
		font-size: 14px;
		font-weight: 400;
		color: #8e8e8e;
		margin-bottom: 16px;
		text-align: center;
	}

	.about-info p {
		font-size: 14px;
		line-height: 1.4;
		color: #8e8e8e;
		text-align: center;
	}

	.sidebar-contacts {
		display: flex;
		gap: 16px;
		margin-top: auto;
	}

	.sidebar-contacts a {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 36px;
		height: 36px;
		border-radius: 8px;
		background: transparent;
		color: #8e8e8e;
		text-decoration: none;
		transition: all 0.2s ease;
		border: 1px solid #dbdbdb;
	}

	.sidebar-contacts a:hover {
		background: #fafafa;
		color: #262626;
	}

	/* Content */
	.content {
		margin-left: 280px;
		width: calc(100% - 280px);
		height: 100vh;
		overflow-y: auto;
	}

	/* Hero Slider */
	.hero-slider {
		position: relative;
		height: 100vh;
		overflow: hidden;
	}

	.slider-container {
		position: relative;
		width: 100%;
		height: 100%;
	}

	.slide {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		opacity: 0;
		transition: opacity 1s ease-in-out;
	}

	.slide.active {
		opacity: 1;
	}

	.slide img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}



	/* Navigation */
	.slider-nav {
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		width: 100%;
		display: flex;
		justify-content: space-between;
		padding: 0 2rem;
		pointer-events: none;
	}

	.nav-btn {
		background: rgba(255, 255, 255, 0.1);
		border: 1px solid rgba(255, 255, 255, 0.3);
		width: 36px;
		height: 36px;
		border-radius: 50%;
		font-size: 14px;
		cursor: pointer;
		transition: all 0.2s;
		pointer-events: all;
		color: rgba(255, 255, 255, 0.8);
		backdrop-filter: blur(10px);
	}

	.nav-btn:hover {
		background: rgba(255, 255, 255, 0.2);
		color: #ffffff;
		border-color: rgba(255, 255, 255, 0.5);
	}

	/* Dots */
	.slider-dots {
		position: absolute;
		bottom: 2rem;
		left: 50%;
		transform: translateX(-50%);
		display: flex;
		gap: 0.5rem;
	}

	.dot {
		width: 8px;
		height: 8px;
		border-radius: 50%;
		border: none;
		background: rgba(255,255,255,0.4);
		cursor: pointer;
		transition: all 0.2s;
	}

	.dot.active {
		background: #ffffff;
	}

	/* Scroll Indicator */
	.scroll-indicator {
		position: absolute;
		bottom: 40px;
		left: 50%;
		transform: translateX(-50%);
		display: flex;
		flex-direction: column;
		align-items: center;
		cursor: pointer;
		color: rgba(255, 255, 255, 0.8);
		transition: all 0.3s ease;
	}

	.scroll-indicator:hover {
		color: #ffffff;
		transform: translateX(-50%) translateY(-5px);
	}

	.scroll-icon {
		animation: bounce 2s infinite;
		margin-bottom: 8px;
	}

	.scroll-indicator span {
		font-size: 12px;
		font-weight: 500;
		text-transform: uppercase;
		letter-spacing: 1px;
		opacity: 0.9;
	}

	@keyframes bounce {
		0%, 20%, 50%, 80%, 100% {
			transform: translateY(0);
		}
		40% {
			transform: translateY(-8px);
		}
		60% {
			transform: translateY(-4px);
		}
	}

	/* Albums Section */
	.albums {
		padding: 40px;
	}

	.albums-grid {
		position: relative;
		padding: 0;
	}

	.album-card {
		display: block;
		background: #ffffff;
		border-radius: 12px;
		overflow: hidden;
		cursor: pointer;
		transition: all 0.3s ease;
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
	}

	.album-card:hover {
		transform: translateY(-6px);
		box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
	}

	.album-card:hover .album-overlay {
		opacity: 1;
	}

	.album-card a {
		text-decoration: none;
		color: inherit;
		display: block;
	}

	.album-card img {
		width: 100%;
		height: auto;
		display: block;
		transition: transform 0.3s;
	}

	.album-overlay {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: linear-gradient(135deg, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.6));
		opacity: 0;
		transition: all 0.3s ease;
		display: flex;
		align-items: center;
		justify-content: center;
		flex-direction: column;
		color: white;
		backdrop-filter: blur(2px);
	}

	.album-card a {
		position: relative;
		display: block;
		text-decoration: none;
		color: inherit;
	}

	.album-title {
		font-size: 16px;
		font-weight: 600;
		margin-bottom: 6px;
		text-align: center;
		text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
	}

	.album-count {
		font-size: 13px;
		font-weight: 400;
		opacity: 0.95;
		text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
	}





	@media (max-width: 1200px) {
		body {
			height: auto !important;
			overflow: visible !important;
		}

		.layout {
			flex-direction: column;
			height: auto;
		}

		.sidebar {
			width: 100% !important;
			height: auto !important;
			position: relative !important;
			border-right: none;
			border-bottom: 1px solid #dbdbdb;
			display: block !important;
		}

		.content {
			margin-left: 0;
			width: 100%;
			height: auto !important;
			overflow: visible !important;
			overflow-y: scroll !important;
		}

		.sidebar-content {
			padding: 16px;
			display: flex;
			align-items: center;
			gap: 16px;
		}

		.about-info {
			flex: 1;
			text-align: left;
		}

		.about-info h1 {
			font-size: 16px;
			margin-bottom: 8px;
		}

		.avatar {
			width: 50px;
			height: 50px;
			margin-bottom: 0;
			flex-shrink: 0;
		}

		.about-info h2 {
			font-size: 12px;
			margin-bottom: 4px;
		}

		.about-info p {
			font-size: 10px;
			line-height: 1.3;
		}

		.sidebar-contacts {
			flex-shrink: 0;
			gap: 8px;
		}

		.sidebar-contacts a {
			width: 28px;
			height: 28px;
		}

		.hero-slider,
		.slider,
		.slider-container,
		.slider-nav,
		.slider-dots,
		.scroll-indicator {
			display: none !important;
		}



		.albums {
			padding: 24px 16px;
		}

		.album-card {
			margin-bottom: 12px;
		}
	}

	@media (max-width: 480px) {
		.sidebar-content {
			padding: 12px;
			gap: 12px;
		}

		.about-info h1 {
			font-size: 14px;
			margin-bottom: 6px;
		}

		.avatar {
			width: 40px;
			height: 40px;
		}

		.about-info h2 {
			font-size: 11px;
			margin-bottom: 2px;
		}

		.about-info p {
			font-size: 9px;
		}

		.sidebar-contacts a {
			width: 24px;
			height: 24px;
		}

		.sidebar-contacts {
			gap: 6px;
		}





		.albums {
			padding: 16px 12px;
		}

		.album-card {
			margin-bottom: 16px;
			border-radius: 8px;
		}
	}
</style>
